<?xml version="1.0" encoding="UTF-8"?>
<!-- ROOT 节点 -->
<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
	debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 定义日志文件 输入位置,注意此处的/ -->
	<property name="log_dir" value="D:/logs" />
	<!-- 日志最大的历史 10天 -->
	<property name="maxHistory" value="2"></property>
	<property name="pattern" value="%d %-5level %logger{0} - %msg%n"></property>
	<!-- %-5level|%-40.40logger{0}|%msg%n -->
	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${pattern}</pattern>
		</encoder>
	</appender>


	<!-- 出错日志 appender -->
	<appender name="ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<file>${log_dir}/error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天回滚 daily -->
			<fileNamePattern>${log_dir}/error-%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<!-- 日志最大的历史10天 -->
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
		</encoder>
	</appender>

	<!-- INFO 日志 appender -->
	<appender name="INFO"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log_dir}/info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天回滚 daily -->
			<fileNamePattern>${log_dir}/info-%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<!-- 日志最大的历史 10天 -->
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
		</encoder>
	</appender>


	<!-- 访问日志 appender -->
	<appender name="ACCESS"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log_dir}/access.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天回滚 daily -->
			<fileNamePattern>${log_dir}/access-%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<!-- 日志最大的历史 60天 -->
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
		</encoder>
	</appender>
	
	<!-- 打印SQL输出 -->
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
	<logger name=" com.tonglukuaijian.commerce.provider" level="error">
		<appender-ref ref="ERROR" />
	</logger>
	
	<logger name="com.tonglukuaijian" level="info" additivity="false">
		<appender-ref ref="INFO" />
	</logger>
	
	<logger name="com.tonglukuaijian" level="info" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="org.apache.cxf.interceptor.LoggingInInterceptor"
		level="info" additivity="false">
		<appender-ref ref="ACCESS" />
	</logger>
	<logger name="org.apache.cxf.interceptor.LoggingOutInterceptor"
		level="info" additivity="false">
		<appender-ref ref="ACCESS" />
	</logger>

	<root level="INFO" >
		<appender-ref ref="STDOUT" />
	</root>
</configuration>